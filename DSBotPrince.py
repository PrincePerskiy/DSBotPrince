
import discord
from discord.ext import commands, tasks
import random
import json
from antispam import handle_antispam
import economy
from shop import Shop
from economy import Economy
import aiosqlite
import os
from discord import Embed
import sqlite3
import time
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
intents.members = True  
intents.messages = True
intents.guilds = True
intents.voice_states = True 
intents.reactions = True
bot = commands.Bot(command_prefix='!', intents=intents)



@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!')



@bot.command(name="stats")
async def stats(ctx, member: discord.Member = None):
    member = member or ctx.author
    user_id = member.id

    # –ü–æ–ª—É—á–∞–µ–º XP –∏ —É—Ä–æ–≤–µ–Ω—å
    xp, level = get_user_data(user_id)
    xp_needed = level * 100
    progress = create_progress_bar(xp, xp_needed)

    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ —ç–∫–æ–Ω–æ–º–∏–∫–∏
    balance = await economy.get_balance(user_id)

    # –†–æ–ª–∏ (–±–µ–∑ @everyone)
    roles = [role.name for role in member.roles if role.name != "@everyone"]
    roles_display = ", ".join(roles) if roles else "–ù–µ—Ç"

    # –°–æ–∑–¥–∞—ë–º embed
    embed = discord.Embed(
        title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.display_name}",
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)

    embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å", value=str(level), inline=True)
    embed.add_field(name="XP", value=f"{xp}/{xp_needed}", inline=True)
    embed.add_field(name="–ü—Ä–æ–≥—Ä–µ—Å—Å", value=progress, inline=False)
    embed.add_field(name="–ë–∞–ª–∞–Ω—Å", value=f"{balance:,} ü™ô", inline=True)
    embed.add_field(name="–†–æ–ª–∏", value=roles_display, inline=False)
    embed.set_footer(text=f"ID: {user_id} ‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: {member.joined_at.date()}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await ctx.send(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ !–ø—Ä–∏–≤
@bot.command(name='Hello')
async def hello(ctx):
    await ctx.send(f"–ü—Ä–∏–≤i—Ç, {ctx.author.mention}!")

# –ö–æ–º–∞–Ω–¥–∞ 
@bot.command(name='ping')
async def ping(ctx):
    latency = round(bot.latency * 1000)  # –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    await ctx.send(f'–ü–∏–Ω–≥ –±–æ—Ç–∞: {latency}ms')

# –ö–æ–º–∞–Ω–¥–∞ !8ball
@bot.command(name='8ball')
async def eight_ball(ctx, *, question: str = None):
    if not question:
        await ctx.send("üé± –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: `!8ball –°—Ç–æ–∏—Ç –ª–∏ –º–Ω–µ —É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é?`")
        return

    if not question.endswith('?'):
        await ctx.send("üé± –í–∞—à –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ `?`.")
        return

    # –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
    responses = [
        "–ë–µ–∑—É—Å–ª–æ–≤–Ω–æ –¥–∞! üòä",
        "–≠—Ç–æ —Ç–æ—á–Ω–æ –Ω–µ —Ç–∞–∫. üòî",
        "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –¥–∞.",
        "–í–æ–∑–º–æ–∂–Ω–æ.",
        "–Ø –Ω–µ —É–≤–µ—Ä–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. ü§î",
        "–®–∞–Ω—Å—ã –º–∞–ª—ã.",
        "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –Ω–µ—Ç.",
        "–î–∞–∂–µ –Ω–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è!",
        "–Ø –≤–∏–∂—É, —á—Ç–æ –¥–∞!",
        "–°–µ–π—á–∞—Å –ª—É—á—à–µ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å."
    ]

    # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞
    answer = random.choice(responses)
    await ctx.send(f"üé± –í–æ–ø—Ä–æ—Å: {question}\n–û—Ç–≤–µ—Ç: {answer}")

@bot.command(name='commands')
async def show_commands(ctx):
    embed = discord.Embed(
        title="üìú –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
        description="–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:",
        color=discord.Color.blue()
    )

    embed.add_field(name="üßç‚Äç‚ôÇÔ∏è –û–±—â–∏–µ", value="""
`!stats [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
`!Hello` ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –±–æ—Ç–∞
`!ping` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞
`!8ball [–≤–æ–ø—Ä–æ—Å?]` ‚Äî –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å
""", inline=False)

    embed.add_field(name="ü™ô –≠–∫–æ–Ω–æ–º–∏–∫–∞", value="""
`!balance` ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
`!work` ‚Äî –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É
`!give @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—Å—É–º–º–∞>` ‚Äî –ü–µ—Ä–µ–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã
`!shop` ‚Äî –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω
`!buy <–ø—Ä–µ–¥–º–µ—Ç>` ‚Äî –ö—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç
`!removeitem <–Ω–∞–∑–≤–∞–Ω–∏–µ>` ‚Äî –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
`!additem <–Ω–∞–∑–≤–∞–Ω–∏–µ> <—Ü–µ–Ω–∞> <–∫–æ–ª-–≤–æ>` ‚Äî –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω
""", inline=False)

    embed.add_field(name="üéÆ –ò–≥—Ä—ã", value="""
`!slots <—Å—Ç–∞–≤–∫–∞>` ‚Äî –ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç
`!guess <—Å—Ç–∞–≤–∫–∞> <—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10>` ‚Äî –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ
""", inline=False)

    embed.add_field(name="üìà –£—Ä–æ–≤–Ω–∏", value="""
`!lvl [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –∏ –æ–ø—ã—Ç
`!givelvl @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—É—Ä–æ–≤–µ–Ω—å>` ‚Äî –í—ã–¥–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å (–ú–æ–≥—É—Ç –∏–∑–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω—ã)
""", inline=False)

    embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ü–∏—è", value="""
`!apply` ‚Äî –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
""", inline=False)

    embed.set_footer(text="–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –ø–æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ ‚Äî –æ–±—Ä–∞—Ç–∏—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É üòä")
    await ctx.send(embed=embed)



@bot.event
async def on_member_join(member):
    
    role = discord.utils.get(member.guild.roles, name="–ó—Ä–∏—Ç–µ–ª—å üë§")
    if role:
        await member.add_roles(role)
        print(f"–†–æ–ª—å '–ó—Ä–∏—Ç–µ–ª—å üë§' –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ {member.name}")

    
    welcome_channel_id = 1292845820898574470  
    channel = bot.get_channel(welcome_channel_id)

    if channel:
        welcome_message = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.mention}! üéâ"
        await channel.send(welcome_message)




economy = Economy()
shop_system = Shop()


async def setup():
    await shop_system.initialize()

import asyncio
asyncio.run(setup())


@bot.command()
async def balance(ctx):
    bal = await economy.get_balance(ctx.author.id)

    embed = discord.Embed(
        title="üí∞ –ë–∞–ª–∞–Ω—Å",
        description=f"**{ctx.author.display_name}**, –≤–æ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",
        color=discord.Color.gold()
    )
    embed.add_field(name="–ú–æ–Ω–µ—Ç—ã", value=f"**{bal:,}** ü™ô", inline=False)
    embed.set_thumbnail(url=ctx.author.avatar.url if ctx.author.avatar else ctx.author.default_avatar.url)
    embed.set_footer(text=f"ID: {ctx.author.id}")

    await ctx.send(embed=embed)

@bot.command()
async def work(ctx):
    earnings = await economy.work(ctx.author.id)
    await ctx.send(f"{ctx.author.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 100 –º–æ–Ω–µ—Ç –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!")

@bot.command()
async def give(ctx, member: discord.Member, amount: int):
    if amount <= 0:
        await ctx.send("‚ùå –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!")
        return

    success = await economy.transfer(ctx.author.id, member.id, amount)

    if success:
        embed = discord.Embed(
            title="üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥",
            description=f"{ctx.author.mention} ‚Üí {member.mention}",
            color=discord.Color.green()
        )
        embed.add_field(name="üí∞ –°—É–º–º–∞", value=f"{amount} –º–æ–Ω–µ—Ç", inline=False)
        embed.set_footer(text="–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞",
            description="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.",
            color=discord.Color.red()
        )
        embed.set_footer(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)


@bot.command()
async def shop(ctx):
    items = await shop_system.get_items()

    if not items:
        await ctx.send("–ú–∞–≥–∞–∑–∏–Ω –ø—É—Å—Ç–æ–π!")
    else:
        # –°–æ–∑–¥–∞—ë–º embed
        embed = discord.Embed(
            title="–ú–∞–≥–∞–∑–∏–Ω —Ç–æ–≤–∞—Ä–æ–≤üè™",
            description="–í–æ—Ç —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µüè∑:",
            color=discord.Color.green()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ embed
        for item in items:
            item_name = item[0]  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            item_price = item[1]  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
            item_stock = item[2]  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞

            embed.add_field(
                name=item_name,
                value=f"–¶–µ–Ω–∞: {item_price} –º–æ–Ω–µ—Ç\n–ù–∞–ª–∏—á–∏–µ: {item_stock} —à—Ç.",
                inline=False
            )

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ —Ñ–∞–π–ª
        file = discord.File("lavka_shop.png", filename="lavka_shop.png")
        embed.set_image(url="attachment://lavka_shop.png")


        await ctx.send(embed=embed, file=file)



@bot.command()
async def buy(ctx, item_name: str):
    success, price = await shop_system.buy_item(ctx.author.id, item_name)

    if success:
        embed = discord.Embed(
            title="üßæ –ß–µ–∫ –ø–æ–∫—É–ø–∫–∏",
            description="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!",
            color=discord.Color.blue()
        )
        embed.add_field(name="üõçÔ∏è –¢–æ–≤–∞—Ä", value=item_name, inline=False)
        embed.add_field(name="üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å", value=f"{price} –º–æ–Ω–µ—Ç", inline=False)
        embed.add_field(name="üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å", value=ctx.author.mention, inline=False)
        embed.set_footer(text="–í–æ–∑–≤—Ä–∞—Ç—É –∏ –æ–±–º–µ–Ω—É –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç üòÑ")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå –ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å",
            description="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ.",
            color=discord.Color.red()
        )
        embed.set_footer(text="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)

@bot.command()
@commands.has_permissions(administrator=True)
async def additem(ctx, item_name: str, price: int, stock: int):
    if price <= 0 or stock < 0:
        await ctx.send("‚ùå –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0, –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!")
        return

    await shop_system.add_item(item_name, price, stock)
    await ctx.send(f"‚úÖ –¢–æ–≤–∞—Ä **{item_name}** –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ {price} –º–æ–Ω–µ—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {stock} —à—Ç.")

@bot.command()
@commands.has_permissions(administrator=True)
async def removeitem(ctx, item_name: str):
    """–£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ –∏–º–µ–Ω–∏."""
    
    # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
    success = await shop_system.remove_item(item_name)
    
    if success:
        await ctx.send(f"–¢–æ–≤–∞—Ä '{item_name}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.")
    else:
        await ctx.send(f"–¢–æ–≤–∞—Ä '{item_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω–µ.")

##@bot.command()
## async def lottery(ctx):
##    user_id = ctx.author.id
##    result = await economy.lottery(user_id)
##    await ctx.send(f"{ctx.author.mention} {result}")

@bot.command()
async def slots(ctx, bet: int):
    user_id = ctx.author.id
    result = await economy.slots(user_id, bet)

    embed = discord.Embed(
        title="üé∞ –ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç",
        description=result,
        color=discord.Color.gold()
    )
    embed.set_author(name=ctx.author.display_name, icon_url=ctx.author.avatar.url if ctx.author.avatar else None)
    await ctx.send(embed=embed)

@slots.error
async def slots_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É. –ü—Ä–∏–º–µ—Ä: `!slots <—Å—Ç–∞–≤–∫–∞>`")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: `!slots 100`")

@bot.command()
async def guess(ctx, bet: int, guess: int):
    user_id = ctx.author.id

    if guess < 1 or guess > 10:
        embed = discord.Embed(
            title="‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ!",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –æ—Ç **1 –¥–æ 10**.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return

    result = await economy.guess_number(user_id, bet, guess)

    embed = discord.Embed(
        title="üé≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ",
        description=result,
        color=discord.Color.green() if "–≤—ã–∏–≥—Ä–∞–ª" in result else discord.Color.red()
    )
    embed.set_footer(
        text=f"–ò–≥—Ä–æ–∫: {ctx.author.display_name}",
        icon_url=ctx.author.display_avatar.url  # –∑–∞–º–µ–Ω–∏–ª –Ω–∞ display_avatar –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    )

    await ctx.send(embed=embed)

@guess.error
async def guess_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∏ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: !guess <—Å—Ç–∞–≤–∫–∞> <—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10>")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏. –ü—Ä–∏–º–µ—Ä: !guess 100 5")

application_channel_id = 1347910187184291931

moderator_role_name = "Moderator"

@bot.command()
async def apply(ctx):
    if "Moderator" in [role.name for role in ctx.author.roles]:
        await ctx.send("–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!")
        return

    #–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    await ctx.send("–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤.")

    #–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
    application_channel = bot.get_channel(application_channel_id)
    embed = Embed(
        title="–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
        description=f"–ó–∞—è–≤–∫—É –ø–æ–¥–∞–ª: {ctx.author.mention}\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {ctx.author.id}",
        color=discord.Color.blue()
    )
    message = await application_channel.send(embed=embed)
    message = await application_channel.send(f"{ctx.author.mention}", embed=embed)

    #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.add_reaction("‚úÖ")  # –ü—Ä–∏–Ω—è—Ç—å
    await message.add_reaction("‚ùå")  # –û—Ç–∫–ª–æ–Ω–∏—Ç—å

@bot.event
async def on_reaction_add(reaction, user):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ –∑–∞—è–≤–∫—É."""
    if user.bot:  # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ –±–æ—Ç–æ–≤
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    if "Moderator" not in [role.name for role in user.roles]:
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if reaction.message.channel.id != application_channel_id:
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏
    if reaction.emoji == "‚úÖ":
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É
        applicant = reaction.message.mentions[0] if reaction.message.mentions else None
        if applicant:
            # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            role = discord.utils.get(reaction.message.guild.roles, name="Moderator")
            if role:
                await applicant.add_roles(role)
                await reaction.message.channel.send(f"–ó–∞—è–≤–∫–∞ –æ—Ç {applicant.mention} –æ–¥–æ–±—Ä–µ–Ω–∞. –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞.")
            else:
                await reaction.message.channel.send("–†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        else:
            await reaction.message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞—è–≤–∫–µ.")
    
    elif reaction.emoji == "‚ùå":
        # –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
        applicant = reaction.message.mentions[0] if reaction.message.mentions else None
        if applicant:
            await reaction.message.channel.send(f"–ó–∞—è–≤–∫–∞ –æ—Ç {applicant.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")  

@bot.command()
async def leaderboard(ctx):
    top_users = await economy.leaderboard()

    if not top_users:
        await ctx.send("–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞!")
        return

    embed = discord.Embed(title="üèÜ –¢–æ–ø 10 –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", color=discord.Color.gold())

    for index, (user_id, balance) in enumerate(top_users, start=1):
        user = bot.get_user(user_id) or f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
        embed.add_field(name=f"{index}. {user}", value=f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç", inline=False)

    await ctx.send(embed=embed)

def create_db():
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("""
    CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        xp INTEGER DEFAULT 0,
        level INTEGER DEFAULT 1
    )
    """)
    conn.commit()
    conn.close()


# üìä –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_data(user_id):
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("SELECT xp, level FROM users WHERE user_id = ?", (user_id,))
    data = c.fetchone()
    if not data:
        c.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()
        data = (0, 1)
    conn.close()
    return data

# ‚ûï –û–±–Ω–æ–≤–∏—Ç—å XP –∏ —É—Ä–æ–≤–µ–Ω—å
def update_xp(user_id, xp_gain):
    xp, level = get_user_data(user_id)
    xp += xp_gain
    current_xp_needed = level * 100  # ‚úÖ —Å–æ—Ö—Ä–∞–Ω—è–µ–º XP, –Ω—É–∂–Ω—ã–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    xp_needed = current_xp_needed
    leveled_up = False
    while xp >= xp_needed:
        xp -= xp_needed
        level += 1
        xp_needed = level * 100
        leveled_up = True
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("REPLACE INTO users (user_id, xp, level) VALUES (?, ?, ?)", (user_id, xp, level))
    conn.commit()
    conn.close()
    return level, xp, current_xp_needed, leveled_up


def create_progress_bar(xp, xp_needed, bar_length=15):
    if xp_needed == 0:
        return '[‚ö™' * bar_length + ']'
    progress = int(bar_length * xp / xp_needed)
    return f"[{'üîµ' * progress}{'‚ö™' * (bar_length - progress)}]"


@bot.event
async def on_message(message):
    if message.author.bot:
        return

    await handle_antispam(message)
    
    user_id = message.author.id
    xp_gain = random.randint(5, 15)
    level, xp, xp_needed, leveled_up = update_xp(user_id, xp_gain)

    progress_bar = create_progress_bar(xp, xp_needed)

    if leveled_up:
        await message.channel.send(
            f"üéâ {message.author.mention} –ø–æ–ª—É—á–∏–ª —É—Ä–æ–≤–µ–Ω—å {level}!\n{progress_bar} ({xp}/{xp_needed} XP)"
        )

    await bot.process_commands(message)

# üìà –ö–æ–º–∞–Ω–¥–∞: !lvl
@bot.command(name='lvl')
async def lvl(ctx, member: discord.Member = None):
    member = member or ctx.author
    xp, level = get_user_data(member.id)
    xp_needed = level * 100
    progress = create_progress_bar(xp, xp_needed)

    embed = discord.Embed(title=f"üìä –£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞: {member.display_name}", color=discord.Color.purple())
    embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å", value=str(level))
    embed.add_field(name="–û–ø—ã—Ç", value=f"{xp}/{xp_needed}")
    embed.add_field(name="–ü—Ä–æ–≥—Ä–µ—Å—Å", value=progress, inline=False)
    await ctx.send(embed=embed)


@bot.command(name="givelvl")
@commands.has_permissions(administrator=True)
async def set_level(ctx, member: discord.Member, level: int):
    if level < 1:
        await ctx.send("‚ùå –£—Ä–æ–≤–µ–Ω—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0!")
        return

    
    xp = 0
    for lvl in range(1, level):
        xp += lvl * 100

    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("REPLACE INTO users (user_id, xp, level) VALUES (?, ?, ?)", (member.id, xp, level))
    conn.commit()
    conn.close()

    embed = discord.Embed(
        title="üéì –£—Ä–æ–≤–µ–Ω—å –≤—ã–¥–∞–Ω",
        description=f"{member.mention} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç —É—Ä–æ–≤–µ–Ω—å **{level}**!",
        color=discord.Color.green()
    )
    embed.set_footer(text=f"–í—ã–¥–∞–Ω–æ: {ctx.author}", icon_url=ctx.author.display_avatar.url)
    await ctx.send(embed=embed)


@set_level.error
async def set_level_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ!")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `!–≤—ã–¥–∞—Ç—å—É—Ä–æ–≤–µ–Ω—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—É—Ä–æ–≤–µ–Ω—å>`")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —É—Ä–æ–≤–Ω—è.")
    else:
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")


import asyncio
create_db()
async def main():
    await bot.load_extension("cogs.AdminLog")

bot.run(TOKEN)
asyncio.run(main())


