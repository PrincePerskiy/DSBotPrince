
import discord
from discord.ext import commands, tasks
import random
import json
from antispam import handle_antispam
import economy
from shop import Shop
from economy import Economy
import aiosqlite
import os
from discord import Embed
import sqlite3
import time
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
intents.members = True  
intents.messages = True
intents.guilds = True
intents.voice_states = True 
intents.reactions = True
bot = commands.Bot(command_prefix='!', intents=intents)



@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ Discord!')



@bot.command(name="stats")
async def stats(ctx, member: discord.Member = None):
    member = member or ctx.author
    user_id = member.id

    # –ü–æ–ª—É—á–∞–µ—Ç XP –∏ —É—Ä–æ–≤–µ–Ω—å
    xp, level = get_user_data(user_id)
    xp_needed = level * 100
    progress = create_progress_bar(xp, xp_needed)

    # –ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∏–∑ —ç–∫–æ–Ω–æ–º–∏–∫–∏
    balance = await economy.get_balance(user_id)

    # –†–æ–ª–∏ (–±–µ–∑ @everyone)
    roles = [role.name for role in member.roles if role.name != "@everyone"]
    roles_display = ", ".join(roles) if roles else "–ù—ñ"

    # –°–æ–∑–¥–∞—ë—Ç embed
    embed = discord.Embed(
        title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.display_name}",
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)

    embed.add_field(name="–†—ñ–≤–µ–Ω—å", value=str(level), inline=True)
    embed.add_field(name="XP", value=f"{xp}/{xp_needed}", inline=True)
    embed.add_field(name="–ü—Ä–æ–≥—Ä–µ—Å", value=progress, inline=False)
    embed.add_field(name="–ë–∞–ª–∞–Ω—Å", value=f"{balance:,} ü™ô", inline=True)
    embed.add_field(name="–†–æ–ª—ñ", value=roles_display, inline=False)
    embed.set_footer(text=f"ID: {user_id} ‚Ä¢ –ü—Ä–∏—î–¥–Ω–∞–≤—Å—è: {member.joined_at.date()}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await ctx.send(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ !–ø—Ä–∏–≤
@bot.command(name='Hello')
async def hello(ctx):
    await ctx.send(f"–ü—Ä–∏–≤i—Ç, {ctx.author.mention}!")

# –ö–æ–º–∞–Ω–¥–∞ 
@bot.command(name='ping')
async def ping(ctx):
    latency = round(bot.latency * 1000)  # –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    await ctx.send(f'–ü—ñ–Ω–≥ –±–æ—Ç–∞: {latency}ms')

# –ö–æ–º–∞–Ω–¥–∞ !8ball
@bot.command(name='8ball')
async def eight_ball(ctx, *, question: str = None):
    if not question:
        await ctx.send("üé± –ü–æ—Å—Ç–∞–≤—Ç–µ —Å–≤–æ—î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `!8ball –ß–∏ –≤–∞—Ä—Ç–æ –º–µ–Ω—ñ –≤—á–∏—Ç–∏—Å—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—é?")
        return

    if not question.endswith('?'):
        await ctx.send("üé± –í–∞—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –º–∞—î –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è –Ω–∞ –∑–Ω–∞–∫ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è `?`.")
        return

    # –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
    responses = [
        "–ë–µ–∑—É–º–æ–≤–Ω–æ —Ç–∞–∫!üòä",
        "–¶–µ —Ç–æ—á–Ω–æ –Ω–µ —Ç–∞–∫. üòî",
        "–ù–∞–π—ñ–º–æ–≤—ñ—Ä–Ω—ñ—à–µ, —Ç–∞–∫.",
        "–ú–æ–∂–ª–∏–≤–æ.",
        "–Ø –Ω–µ –≤–ø–µ–≤–Ω–µ–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ. ü§î",
        "–®–∞–Ω—Å–∏ –º–∞–ª—ñ.",
        "–ë–µ–∑—É–º–æ–≤–Ω–æ –Ω—ñ.",
        "–ù–∞–≤—ñ—Ç—å –Ω–µ —Å—É–º–Ω—ñ–≤–∞–π—Å—è!",
        "–Ø –±–∞—á—É, —â–æ —Ç–∞–∫!",
        "–ó–∞—Ä–∞–∑ –∫—Ä–∞—â–µ –Ω–µ –ø–∏—Ç–∞—Ç–∏."
    ]

    # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞
    answer = random.choice(responses)
    await ctx.send(f"üé± –ü–∏—Ç–∞–Ω–Ω—è: {question}\n–û—Ç–≤–µ—Ç: {answer}")

@bot.command(name='commands')
async def show_commands(ctx):
    embed = discord.Embed(
        title="üìú –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
        description="–û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞:",
        color=discord.Color.blue()
    )

    embed.add_field(name="üßç‚Äç‚ôÇÔ∏è –û–±—â–∏–µ", value="""
`!stats [–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á]` - –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
`!Hello` - –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞
``!ping` - –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—ñ–Ω–≥ –±–æ—Ç–∞
`!8ball [–ø–∏—Ç–∞–Ω–Ω—è?]` - –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å –Ω–∞ —Ç–≤–æ—î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
""", inline=False)

    embed.add_field(name="ü™ô –ï–∫–æ–Ω–æ–º—ñ–∫–∞", value="""
`!balance` - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å
`!work` - –û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω—É –Ω–∞–≥–æ—Ä–æ–¥—É
`!give @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á <—Å—É–º–∞>` - –ü–µ—Ä–µ–¥–∞—Ç–∏ –º–æ–Ω–µ—Ç–∏
`!shop` - –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–∞–≥–∞–∑–∏–Ω
`!buy <–ø—Ä–µ–¥–º–µ—Ç>` - –ö—É–ø–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç
`!removeitem <–Ω–∞–∑–≤–∞>` - –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç —ñ–∑ –º–∞–≥–∞–∑–∏–Ω—É
`!additem <–Ω–∞–∑–≤–∞> <—Ü—ñ–Ω–∞> <–∫—ñ–ª—å–∫—ñ—Å—Ç—å>` - –î–æ–¥–∞—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç —É –º–∞–≥–∞–∑–∏–Ω
""", inline=False)

    embed.add_field(name="üéÆ –ò–≥—Ä—ã", value="""
`!slots <—Å—Ç–∞–≤–∫–∞>` - –Ü–≥—Ä–æ–≤–∏–π –∞–≤—Ç–æ–º–∞—Ç
`!guess <—Å—Ç–∞–≤–∫–∞> <—á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 10>` - –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ
""", inline=False)

    embed.add_field(name="üìà –£—Ä–æ–≤–Ω–∏", value="""
`!lvl [–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á]` - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å —ñ –¥–æ—Å–≤—ñ–¥
`!givelvl @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á <—Ä—ñ–≤–µ–Ω—å>` - –í–∏–¥–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å (–ú–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞–¥–º—ñ–Ω–∏)
""", inline=False)

    embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ü—ñ—è", value="""
`!apply` ‚Äî –ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
""", inline=False)

    embed.set_footer(text="–î–ª—è –ø–æ–¥—Ä–æ–±–∏—Ü—å –ø–æ –∫–æ–∂–Ω—ñ–π –∫–æ–º–∞–Ω–¥—ñ - –∑–≤–µ—Ä–Ω–∏—Å—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ üòä")
    await ctx.send(embed=embed)



@bot.event
async def on_member_join(member):
    
    role = discord.utils.get(member.guild.roles, name="–ó—Ä–∏—Ç–µ–ª—å üë§")
    if role:
        await member.add_roles(role)
        print(f"–†–æ–ª—å '–ì–ª—è–¥–∞—á üë§' –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞ {member.name}")

    
    welcome_channel_id = 1292845820898574470  
    channel = bot.get_channel(welcome_channel_id)

    if channel:
        welcome_message = f"–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, {member.mention}! üéâ"
        await channel.send(welcome_message)




economy = Economy()
shop_system = Shop()


async def setup():
    await shop_system.initialize()

import asyncio
asyncio.run(setup())


@bot.command()
async def balance(ctx):
    bal = await economy.get_balance(ctx.author.id)

    embed = discord.Embed(
        title="üí∞ –ë–∞–ª–∞–Ω—Å",
        description=f"**{ctx.author.display_name}**, –æ—Å—å –≤–∞—à –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å:",
        color=discord.Color.gold()
    )
    embed.add_field(name="–ú–æ–Ω–µ—Ç–∏", value=f"**{bal:,}** ü™ô", inline=False)
    embed.set_thumbnail(url=ctx.author.avatar.url if ctx.author.avatar else ctx.author.default_avatar.url)
    embed.set_footer(text=f"ID: {ctx.author.id}")

    await ctx.send(embed=embed)
    

@bot.command()
async def work(ctx):
    earnings = await economy.work(ctx.author.id)
    await ctx.send(f"{ctx.author.mention}, –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 100 –º–æ–Ω–µ—Ç –∑–∞ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å!")

@bot.command()
async def give(ctx, member: discord.Member, amount: int):
    if amount <= 0:
        await ctx.send("‚ùå –°—É–º–∞ –ø–µ—Ä–µ–∫–∞–∑—É –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0!")
        return

    success = await economy.transfer(ctx.author.id, member.id, amount)

    if success:
        embed = discord.Embed(
            title="üè¶ –ë–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –ø–µ—Ä–µ–∫–∞–∑",
            description=f"{ctx.author.mention} ‚Üí {member.mention}",
            color=discord.Color.green()
        )
        embed.add_field(name="üí∞ –°—É–º–º–∞", value=f"{amount} –º–æ–Ω–µ—Ç", inline=False)
        embed.set_footer(text="–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É",
            description="–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–∫–∞–∑—É.",
            color=discord.Color.red()
        )
        embed.set_footer(text="–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)


@bot.command()
async def shop(ctx):
    items = await shop_system.get_items()

    if not items:
        await ctx.send("–ú–∞–≥–∞–∑–∏–Ω –ø—É—Å—Ç–∏–π!")
    else:
        # –°–æ–∑–¥–∞—ë—Ç embed
        embed = discord.Embed(
            title="–ú–∞–≥–∞–∑–∏–Ω —Ç–æ–≤–∞—Ä—ñ–≤üè™",
            description="–û—Å—å —â–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞—à–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñüè∑:",
            color=discord.Color.green()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ embed
        for item in items:
            item_name = item[0]  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            item_price = item[1]  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
            item_stock = item[2]  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞

            embed.add_field(
                name=item_name,
                value=f"–¶—ñ–Ω–∞: {item_price} –º–æ–Ω–µ—Ç\n–ù–∞—è–≤–Ω—ñ—Å—Ç—å: {item_stock} —à—Ç.",
                inline=False
            )


        file = discord.File("lavka_shop.png", filename="lavka_shop.png")
        embed.set_image(url="attachment://lavka_shop.png")


        await ctx.send(embed=embed, file=file)



@bot.command()
async def buy(ctx, item_name: str):
    success, price = await shop_system.buy_item(ctx.author.id, item_name)

    if success:
        embed = discord.Embed(
            title="üßæ –ß–µ–∫ –∫—É–ø—ñ–≤–ª—ñ",
            description="–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ –Ω–∞—à–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñ!",
            color=discord.Color.blue()
        )
        embed.add_field(name="üõçÔ∏è –¢–æ–≤–∞—Ä", value=item_name, inline=False)
        embed.add_field(name="üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å", value=f"{price} –º–æ–Ω–µ—Ç", inline=False)
        embed.add_field(name="üë§ –ü–æ–∫—É–ø–µ—Ü—å", value=ctx.author.mention, inline=False)
        embed.set_footer(text="–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—é —Ç–∞ –æ–±–º—ñ–Ω—É –Ω–µ –ø—ñ–¥–ª—è–≥–∞—î üòÑ")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå –ü–æ–∫—É–ø–∫–∞ –Ω–µ –≤–¥–∞–ª–∞—Å—è",
            description="–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –∞–±–æ —Ç–æ–≤–∞—Ä –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —É –º–∞–≥–∞–∑–∏–Ω—ñ.",
            color=discord.Color.red()
        )
        embed.set_footer(text="–°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π —Ç–æ–≤–∞—Ä –∞–±–æ –ø–æ–ø–æ–≤–Ω—ñ—Ç—å –±–∞–ª–∞–Ω—Å")
        embed.timestamp = ctx.message.created_at

        await ctx.send(embed=embed)

@bot.command()
@commands.has_permissions(administrator=True)
async def additem(ctx, item_name: str, price: int, stock: int):
    if price <= 0 or stock < 0:
        await ctx.send("‚ùå –¶—ñ–Ω–∞ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0, —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥'—î–º–Ω–æ—é!")
        return

    await shop_system.add_item(item_name, price, stock)
    await ctx.send(f"‚úÖ –¢–æ–≤–∞—Ä **{item_name}** –¥–æ–¥–∞–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ {price} –º–æ–Ω–µ—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å: {stock} —à—Ç.")

@bot.command()
@commands.has_permissions(administrator=True)
async def removeitem(ctx, item_name: str):
    """–£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ –∏–º–µ–Ω–∏."""
    
    # —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
    success = await shop_system.remove_item(item_name)
    
    if success:
        await ctx.send(f"–¢–æ–≤–∞—Ä '{item_name}' –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –º–∞–≥–∞–∑–∏–Ω—É.")
    else:
        await ctx.send(f"–¢–æ–≤–∞—Ä '{item_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ.")

##@bot.command()
## async def lottery(ctx):
##    user_id = ctx.author.id
##    result = await economy.lottery(user_id)
##    await ctx.send(f"{ctx.author.mention} {result}")

@bot.command()
async def slots(ctx, bet: int):
    user_id = ctx.author.id
    result = await economy.slots(user_id, bet)

    embed = discord.Embed(
        title="üé∞ –Ü–≥—Ä–æ–≤–∏–π –∞–≤—Ç–æ–º–∞—Ç",
        description=result,
        color=discord.Color.gold()
    )
    embed.set_author(name=ctx.author.display_name, icon_url=ctx.author.avatar.url if ctx.author.avatar else None)
    await ctx.send(embed=embed)

@slots.error
async def slots_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å —Å—Ç–∞–≤–∫—É. –ü—Ä–∏–∫–ª–∞–¥: `!slots <—Å—Ç–∞–≤–∫–∞>`")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –°—Ç–∞–≤–∫–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º. –ü—Ä–∏–∫–ª–∞–¥: `!slots 100")

@bot.command()
async def guess(ctx, bet: int, guess: int):
    user_id = ctx.author.id

    if guess < 1 or guess > 10:
        embed = discord.Embed(
            title="‚ùå –ù–µ–≤—ñ—Ä–Ω–µ —á–∏—Å–ª–æ!",
            description="–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä–∏ —á–∏—Å–ª–æ –≤—ñ–¥ **1 –¥–æ 10**.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return

    result = await economy.guess_number(user_id, bet, guess)

    embed = discord.Embed(
        title="üé≤ –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ",
        description=result,
        color=discord.Color.green() if "–≤–∏–≥—Ä–∞–≤" in result else discord.Color.red()
    )
    embed.set_footer(
        text=f"–ì—Ä–∞–≤–µ—Ü—å: {ctx.author.display_name}",
        icon_url=ctx.author.display_avatar.url  
    )

    await ctx.send(embed=embed)

@guess.error
async def guess_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å —Å—Ç–∞–≤–∫—É —ñ —á–∏—Å–ª–æ. –ü—Ä–∏–∫–ª–∞–¥: !guess <—Å—Ç–∞–≤–∫–∞> <—á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 10>")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –ê—Ä–≥—É–º–µ–Ω—Ç–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —á–∏—Å–ª–∞–º–∏. –ü—Ä–∏–∫–ª–∞–¥: !guess 100 5")

application_channel_id = 1347910187184291931

moderator_role_name = "Moderator"

@bot.command()
async def apply(ctx):
    if "Moderator" in [role.name for role in ctx.author.roles]:
        await ctx.send("–í–∏ –≤–∂–µ —î –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!")
        return

    #–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    await ctx.send("–ó–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤.")

    #–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
    application_channel = bot.get_channel(application_channel_id)
    embed = Embed(
        title="–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
        description=f"–ó–∞—è–≤–∫—É –ø–æ–¥–∞–≤: {ctx.author.mention}\nID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:: {ctx.author.id}",
        color=discord.Color.blue()
    )
    message = await application_channel.send(embed=embed)
    message = await application_channel.send(f"{ctx.author.mention}", embed=embed)

    #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.add_reaction("‚úÖ")  # –ü—Ä–∏–Ω—è—Ç—å
    await message.add_reaction("‚ùå")  # –û—Ç–∫–ª–æ–Ω–∏—Ç—å

@bot.event
async def on_reaction_add(reaction, user):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ –∑–∞—è–≤–∫—É."""
    if user.bot:  # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ –±–æ—Ç–æ–≤
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    if "Moderator" not in [role.name for role in user.roles]:
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if reaction.message.channel.id != application_channel_id:
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏
    if reaction.emoji == "‚úÖ":
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É
        applicant = reaction.message.mentions[0] if reaction.message.mentions else None
        if applicant:
            # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            role = discord.utils.get(reaction.message.guild.roles, name="Moderator")
            if role:
                await applicant.add_roles(role)
                await reaction.message.channel.send(f"–ó–∞—è–≤–∫–∞ –≤—ñ–¥ {applicant.mention} —Å—Ö–≤–∞–ª–µ–Ω–æ. –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ.")
            else:
                await reaction.message.channel.send("–†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        else:
            await reaction.message.channel.send("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –∑–∞—è–≤—Ü—ñ.")
    
    elif reaction.emoji == "‚ùå":
        # –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
        applicant = reaction.message.mentions[0] if reaction.message.mentions else None
        if applicant:
            await reaction.message.channel.send(f"–ó–∞—è–≤–∫–∞ –≤—ñ–¥ {applicant.mention} –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞.")  

@bot.command()
async def leaderboard(ctx):
    top_users = await economy.leaderboard()

    if not top_users:
        await ctx.send("–¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤ –ø—É—Å—Ç–∞!")
        return

    embed = discord.Embed(title="üèÜ –¢–æ–ø-10 –Ω–∞–π–±–∞–≥–∞—Ç—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", color=discord.Color.gold())

    for index, (user_id, balance) in enumerate(top_users, start=1):
        user = bot.get_user(user_id) or f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id}"
        embed.add_field(name=f"{index}. {user}", value=f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç", inline=False)

    await ctx.send(embed=embed)

def create_db():
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("""
    CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        xp INTEGER DEFAULT 0,
        level INTEGER DEFAULT 1
    )
    """)
    conn.commit()
    conn.close()



def get_user_data(user_id):
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("SELECT xp, level FROM users WHERE user_id = ?", (user_id,))
    data = c.fetchone()
    if not data:
        c.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()
        data = (0, 1)
    conn.close()
    return data

# –û–±–Ω–æ–≤–∏—Ç—å XP –∏ —É—Ä–æ–≤–µ–Ω—å
def update_xp(user_id, xp_gain):
    xp, level = get_user_data(user_id)
    xp += xp_gain
    current_xp_needed = level * 100  # —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç XP, –Ω—É–∂–Ω—ã–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    xp_needed = current_xp_needed
    leveled_up = False
    while xp >= xp_needed:
        xp -= xp_needed
        level += 1
        xp_needed = level * 100
        leveled_up = True
    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("REPLACE INTO users (user_id, xp, level) VALUES (?, ?, ?)", (user_id, xp, level))
    conn.commit()
    conn.close()
    return level, xp, current_xp_needed, leveled_up


def create_progress_bar(xp, xp_needed, bar_length=15):
    if xp_needed == 0:
        return '[‚ö™' * bar_length + ']'
    progress = int(bar_length * xp / xp_needed)
    return f"[{'üîµ' * progress}{'‚ö™' * (bar_length - progress)}]"


@bot.event
async def on_message(message):
    if message.author.bot:
        return

    await handle_antispam(message)
    
    user_id = message.author.id
    xp_gain = random.randint(5, 15)
    level, xp, xp_needed, leveled_up = update_xp(user_id, xp_gain)

    progress_bar = create_progress_bar(xp, xp_needed)

    if leveled_up:
        await message.channel.send(
            f"üéâ {message.author.mention} –æ—Ç—Ä–∏–º–∞–≤ —Ä—ñ–≤–µ–Ω—å {level}!\n{progress_bar} ({xp}/{xp_needed} XP)"
        )

    await bot.process_commands(message)

# –ö–æ–º–∞–Ω–¥–∞: !lvl
@bot.command(name='lvl')
async def lvl(ctx, member: discord.Member = None):
    member = member or ctx.author
    xp, level = get_user_data(member.id)
    xp_needed = level * 150
    progress = create_progress_bar(xp, xp_needed)

    embed = discord.Embed(title=f"üìä –†—ñ–≤–µ–Ω—å –≥—Ä–∞–≤—Ü—è: {member.display_name}", color=discord.Color.purple())
    embed.add_field(name="–†—ñ–≤–µ–Ω—å", value=str(level))
    embed.add_field(name="–î–æ—Å–≤—ñ–¥", value=f"{xp}/{xp_needed}")
    embed.add_field(name="–ü—Ä–æ–≥—Ä–µ—Å", value=progress, inline=False)
    await ctx.send(embed=embed)


@bot.command(name="givelvl")
@commands.has_permissions(administrator=True)
async def set_level(ctx, member: discord.Member, level: int):
    if level < 1:
        await ctx.send("‚ùå –†—ñ–≤–µ–Ω—å –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–∏–º –∑–∞ 0!")
        return

    
    xp = 0
    for lvl in range(1, level):
        xp += lvl * 100

    conn = sqlite3.connect("leveling.db")
    c = conn.cursor()
    c.execute("REPLACE INTO users (user_id, xp, level) VALUES (?, ?, ?)", (member.id, xp, level))
    conn.commit()
    conn.close()

    embed = discord.Embed(
        title="üéì –†—ñ–≤–µ–Ω—å –≤–∏–¥–∞–Ω–æ",
        description=f"{member.mention} —Ç–µ–ø–µ—Ä –º–∞—î —Ä—ñ–≤–µ–Ω—å **{level}**!",
        color=discord.Color.green()
    )
    embed.set_footer(text=f"–í–∏–¥–∞–Ω–æ: {ctx.author}", icon_url=ctx.author.display_avatar.url)
    await ctx.send(embed=embed)


@set_level.error
async def set_level_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("üö´ –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—å–æ–≥–æ!")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: `!–≤–∏–¥–∞—Ç–∏—Ä—ñ–≤–µ–Ω—å @–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á <—Ä—ñ–≤–µ–Ω—å>`")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùó –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ –≤–∫–∞–∑–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ —Ü—ñ–ª–µ —á–∏—Å–ª–æ —Ä—ñ–≤–Ω—è.")
    else:
        await ctx.send("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.")

import unittest
from discord.ext import commands
from DSBotPrince import bot 

class BotTest(unittest.TestCase):
    def test_prefix(self):
        self.assertEqual(bot.command_prefix, "!")

if __name__ == '__main__':
    unittest.main()


import asyncio
create_db()
async def main():
    await bot.load_extension("cogs.AdminLog")

bot.run(TOKEN)
asyncio.run(main())


